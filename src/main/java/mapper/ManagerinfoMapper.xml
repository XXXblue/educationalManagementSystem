<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.ManagerinfoMapper" >
  <resultMap id="BaseResultMap" type="po.Managerinfo" >
    <id column="ManagerNum" property="managernum" jdbcType="CHAR" />
    <result column="ManagerName" property="managername" jdbcType="VARCHAR" />
    <result column="ManagerSex" property="managersex" jdbcType="CHAR" />
    <result column="ManagerBirthday" property="managerbirthday" jdbcType="DATE" />
    <result column="ManagerPassword" property="managerpassword" jdbcType="VARCHAR" />
    <result column="ManagerRole" property="managerrole" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ManagerNum, ManagerName, ManagerSex, ManagerBirthday, ManagerPassword, ManagerRole
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.ManagerinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from managerinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from managerinfo
    where ManagerNum = #{managernum,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from managerinfo
    where ManagerNum = #{managernum,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.ManagerinfoExample" >
    delete from managerinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Managerinfo" >
    insert into managerinfo (ManagerNum, ManagerName, ManagerSex, 
      ManagerBirthday, ManagerPassword, ManagerRole
      )
    values (#{managernum,jdbcType=CHAR}, #{managername,jdbcType=VARCHAR}, #{managersex,jdbcType=CHAR}, 
      #{managerbirthday,jdbcType=DATE}, #{managerpassword,jdbcType=VARCHAR}, #{managerrole,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Managerinfo" >
    insert into managerinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="managernum != null" >
        ManagerNum,
      </if>
      <if test="managername != null" >
        ManagerName,
      </if>
      <if test="managersex != null" >
        ManagerSex,
      </if>
      <if test="managerbirthday != null" >
        ManagerBirthday,
      </if>
      <if test="managerpassword != null" >
        ManagerPassword,
      </if>
      <if test="managerrole != null" >
        ManagerRole,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="managernum != null" >
        #{managernum,jdbcType=CHAR},
      </if>
      <if test="managername != null" >
        #{managername,jdbcType=VARCHAR},
      </if>
      <if test="managersex != null" >
        #{managersex,jdbcType=CHAR},
      </if>
      <if test="managerbirthday != null" >
        #{managerbirthday,jdbcType=DATE},
      </if>
      <if test="managerpassword != null" >
        #{managerpassword,jdbcType=VARCHAR},
      </if>
      <if test="managerrole != null" >
        #{managerrole,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.ManagerinfoExample" resultType="java.lang.Integer" >
    select count(*) from managerinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update managerinfo
    <set >
      <if test="record.managernum != null" >
        ManagerNum = #{record.managernum,jdbcType=CHAR},
      </if>
      <if test="record.managername != null" >
        ManagerName = #{record.managername,jdbcType=VARCHAR},
      </if>
      <if test="record.managersex != null" >
        ManagerSex = #{record.managersex,jdbcType=CHAR},
      </if>
      <if test="record.managerbirthday != null" >
        ManagerBirthday = #{record.managerbirthday,jdbcType=DATE},
      </if>
      <if test="record.managerpassword != null" >
        ManagerPassword = #{record.managerpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.managerrole != null" >
        ManagerRole = #{record.managerrole,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update managerinfo
    set ManagerNum = #{record.managernum,jdbcType=CHAR},
      ManagerName = #{record.managername,jdbcType=VARCHAR},
      ManagerSex = #{record.managersex,jdbcType=CHAR},
      ManagerBirthday = #{record.managerbirthday,jdbcType=DATE},
      ManagerPassword = #{record.managerpassword,jdbcType=VARCHAR},
      ManagerRole = #{record.managerrole,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Managerinfo" >
    update managerinfo
    <set >
      <if test="managername != null" >
        ManagerName = #{managername,jdbcType=VARCHAR},
      </if>
      <if test="managersex != null" >
        ManagerSex = #{managersex,jdbcType=CHAR},
      </if>
      <if test="managerbirthday != null" >
        ManagerBirthday = #{managerbirthday,jdbcType=DATE},
      </if>
      <if test="managerpassword != null" >
        ManagerPassword = #{managerpassword,jdbcType=VARCHAR},
      </if>
      <if test="managerrole != null" >
        ManagerRole = #{managerrole,jdbcType=VARCHAR},
      </if>
    </set>
    where ManagerNum = #{managernum,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Managerinfo" >
    update managerinfo
    set ManagerName = #{managername,jdbcType=VARCHAR},
      ManagerSex = #{managersex,jdbcType=CHAR},
      ManagerBirthday = #{managerbirthday,jdbcType=DATE},
      ManagerPassword = #{managerpassword,jdbcType=VARCHAR},
      ManagerRole = #{managerrole,jdbcType=VARCHAR}
    where ManagerNum = #{managernum,jdbcType=CHAR}
  </update>
</mapper>